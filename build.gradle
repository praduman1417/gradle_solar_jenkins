/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
//apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
//apply plugin: 'sonar-runner'

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
  }
}

apply plugin: "org.sonarqube"
//apply plugin: 'sonar-runner'

//sonarRunner {
//   sonarProperties {
//      property "sonar.host.url", "http://localhost:9000"
//     property "sonar.jdbc.url", "jdbc:postgresql://qa-prod2.erecyclingcorps.com:5432/solarqube"
//        property "sonar.jdbc.driverClassName", "com.postgresql.Driver"
//        property "sonar.jdbc.username", "solarqube"
//        property "sonar.jdbc.password", "solarqube"
//    }
//}



// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

